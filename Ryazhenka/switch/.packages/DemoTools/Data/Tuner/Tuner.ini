;═══════════════════════════════════════════════════════════════════════════════
; Tuner.ini - Ryazhenka DemoTools System Tuner
; Author: Dimasick-git
; Project: Рыженка (Ryazhenka)
; Description: Main tuner configuration with preset forwarding and auto-updater
;═══════════════════════════════════════════════════════════════════════════════

;───────────────────────────────────────────────────────────────────────────────
; Main Configuration
;───────────────────────────────────────────────────────────────────────────────
[Main]
author=Dimasick-git
project=Ryazhenka
version=1.0.0
style=Ryazhenka_DemoTools

;───────────────────────────────────────────────────────────────────────────────
; Preset Forwarder - Выбор пресетов из Presets.ini
;───────────────────────────────────────────────────────────────────────────────
[Preset_Forwarder]
; Forward CPU preset selection
list_source|/switch/.packages/DemoTools/Data/Tuner/Presets.ini|CPU Preset
forwarder|cpu_preset|/switch/.packages/DemoTools/Data/Tuner/Presets.ini|CPU Preset

; Forward GPU preset selection
list_source|/switch/.packages/DemoTools/Data/Tuner/Presets.ini|GPU Preset
forwarder|gpu_preset|/switch/.packages/DemoTools/Data/Tuner/Presets.ini|GPU Preset

; Forward RAM preset selection
list_source|/switch/.packages/DemoTools/Data/Tuner/Presets.ini|RAM Preset
forwarder|ram_preset|/switch/.packages/DemoTools/Data/Tuner/Presets.ini|RAM Preset

;───────────────────────────────────────────────────────────────────────────────
; Auto-Updater Configuration
;───────────────────────────────────────────────────────────────────────────────
[Updater]
repo_owner=Dimasick-git
repo_name=Ryzhenka
update_path=/switch/.packages/DemoTools/Data/Tuner
check_url=https://api.github.com/repos/Dimasick-git/Ryzhenka/releases/latest

;───────────────────────────────────────────────────────────────────────────────
; Update Instructions - Инструкция по обновлению через GitHub релиз
;───────────────────────────────────────────────────────────────────────────────
[Update_Instructions]
; Ryazhenka Tuner Auto-Update System
; 
; Этот тюнер поддерживает автоматическое обновление через GitHub Releases
; 
; Процесс обновления:
; 1. Скрипт проверяет последний релиз в репозитории Dimasick-git/Ryzhenka
; 2. Сравнивает версию с текущей установленной версией
; 3. При наличии новой версии скачивает и устанавливает обновление
; 4. Создает резервную копию перед обновлением
; 
; Для запуска обновления используйте shell-скрипт ниже

;───────────────────────────────────────────────────────────────────────────────
; Update Shell Script - Shell-скрипт обновления
;───────────────────────────────────────────────────────────────────────────────
[Update_Script]
#!/bin/bash
#═══════════════════════════════════════════════════════════════════════════════
# Ryazhenka Tuner Auto-Updater Script
# Author: Dimasick-git
# Description: Automatically updates DemoTools Tuner from GitHub releases
#═══════════════════════════════════════════════════════════════════════════════

REPO_OWNER="Dimasick-git"
REPO_NAME="Ryzhenka"
INSTALL_PATH="/switch/.packages/DemoTools/Data/Tuner"
CURRENT_VERSION="1.0.0"
BACKUP_PATH="/switch/.packages/DemoTools/Data/Tuner.backup"

# Colors for output (Ryazhenka style)
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}═══════════════════════════════════════════════════════════════════${NC}"
echo -e "${YELLOW}     Ryazhenka DemoTools Tuner Auto-Updater${NC}"
echo -e "${BLUE}═══════════════════════════════════════════════════════════════════${NC}"
echo ""

# Check for curl
if ! command -v curl &> /dev/null; then
    echo -e "${RED}[ERROR]${NC} curl is not installed. Please install curl first."
    exit 1
fi

# Fetch latest release info from GitHub API
echo -e "${BLUE}[INFO]${NC} Checking for updates..."
RELEASE_INFO=$(curl -s "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/releases/latest")

if [ -z "$RELEASE_INFO" ]; then
    echo -e "${RED}[ERROR]${NC} Failed to fetch release information."
    exit 1
fi

# Extract latest version
LATEST_VERSION=$(echo "$RELEASE_INFO" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')

if [ -z "$LATEST_VERSION" ]; then
    echo -e "${RED}[ERROR]${NC} Could not determine latest version."
    exit 1
fi

echo -e "${GREEN}[OK]${NC} Current version: ${CURRENT_VERSION}"
echo -e "${GREEN}[OK]${NC} Latest version:  ${LATEST_VERSION}"
echo ""

# Compare versions
if [ "$CURRENT_VERSION" = "$LATEST_VERSION" ]; then
    echo -e "${GREEN}[OK]${NC} You are already using the latest version."
    exit 0
fi

echo -e "${YELLOW}[UPDATE]${NC} New version available: ${LATEST_VERSION}"
echo -e "${BLUE}[INFO]${NC} Starting update process..."
echo ""

# Create backup
echo -e "${BLUE}[INFO]${NC} Creating backup..."
if [ -d "$INSTALL_PATH" ]; then
    rm -rf "$BACKUP_PATH"
    cp -r "$INSTALL_PATH" "$BACKUP_PATH"
    echo -e "${GREEN}[OK]${NC} Backup created at ${BACKUP_PATH}"
fi

# Get download URL
DOWNLOAD_URL=$(echo "$RELEASE_INFO" | grep '"browser_download_url"' | grep 'Tuner' | head -n 1 | sed -E 's/.*"([^"]+)".*/\1/')

if [ -z "$DOWNLOAD_URL" ]; then
    echo -e "${YELLOW}[WARN]${NC} No tuner package found in release. Cloning from repository..."
    
    # Alternative: clone from git
    TMP_DIR="/tmp/ryazhenka_update_$$"
    mkdir -p "$TMP_DIR"
    
    git clone --depth 1 "https://github.com/${REPO_OWNER}/${REPO_NAME}.git" "$TMP_DIR"
    
    if [ -d "${TMP_DIR}/Ryazhenka/switch/.packages/DemoTools/Data/Tuner" ]; then
        cp -r "${TMP_DIR}/Ryazhenka/switch/.packages/DemoTools/Data/Tuner/"* "$INSTALL_PATH/"
        echo -e "${GREEN}[OK]${NC} Update installed successfully!"
    else
        echo -e "${RED}[ERROR]${NC} Failed to find tuner files in repository."
        rm -rf "$TMP_DIR"
        exit 1
    fi
    
    rm -rf "$TMP_DIR"
else
    # Download and install from release
    echo -e "${BLUE}[INFO]${NC} Downloading update from: ${DOWNLOAD_URL}"
    
    TMP_FILE="/tmp/tuner_update_$$.zip"
    curl -L -o "$TMP_FILE" "$DOWNLOAD_URL"
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}[OK]${NC} Download complete."
        echo -e "${BLUE}[INFO]${NC} Installing update..."
        
        unzip -o "$TMP_FILE" -d "$INSTALL_PATH"
        rm "$TMP_FILE"
        
        echo -e "${GREEN}[OK]${NC} Update installed successfully!"
    else
        echo -e "${RED}[ERROR]${NC} Download failed."
        exit 1
    fi
fi

# Update version in config
sed -i "s/version=.*/version=${LATEST_VERSION}/" "${INSTALL_PATH}/Tuner.ini"

echo ""
echo -e "${BLUE}═══════════════════════════════════════════════════════════════════${NC}"
echo -e "${GREEN}[SUCCESS]${NC} Tuner updated to version ${LATEST_VERSION}!"
echo -e "${BLUE}═══════════════════════════════════════════════════════════════════${NC}"
echo ""

exit 0

;═══════════════════════════════════════════════════════════════════════════════
; End of Tuner.ini - Ryazhenka Project Style
;═══════════════════════════════════════════════════════════════════════════════
